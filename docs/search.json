[
  {
    "objectID": "Processing.html",
    "href": "Processing.html",
    "title": "Data Processing",
    "section": "",
    "text": "library(Streptoprocne)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\nurl &lt;- \"https://aa.usno.navy.mil/calculated/rstt/year?ID=AA&year=2025&task=0&lat=39.2805&lon=-76.5940&label=Baltimore%2C+MD&tz=5.00&tz_sign=-1&submit=Get+Data\"\nSunriseTable &lt;- Streptoprocne::SunriseSunset(x=url)\n\nurl &lt;- \"https://aa.usno.navy.mil/calculated/rstt/year?ID=AA&year=2025&task=2&lat=39.2805&lon=-76.5940&label=Baltimore%2C+MD&tz=5.00&tz_sign=-1&submit=Get+Data\"\nTwilightTable &lt;- CivilTwilight(x=url)\n\nyear &lt;- as.integer(format(Sys.Date(), \"%Y\"))\n\nTheData &lt;- left_join(SunriseTable, TwilightTable, by=c(\"Month\", \"Day\"))\n\nTheData$Date &lt;- lubridate::make_date(year = year,\n month = match(TheData$Month, month.name), day = as.integer(TheData$Day))\n\nData &lt;- TheData |&gt; arrange(Date)|&gt; relocate(Date, .before = Sunrise) |&gt;\n   select(-Month, -Day)\n\nwrite.csv(Data, \"data/TwilightSunrise.csv\", row.names=FALSE)\n\n\nurl &lt;- \"https://www.ndbc.noaa.gov/data/realtime2/BLTM2.txt\"\nFtMcHenry &lt;- NOAA_Buoys(x=\"https://www.ndbc.noaa.gov/data/realtime2/BLTM2.txt\")\nFtMcHenry &lt;- FtMcHenry |&gt; select(datetime, WTMP, ATMP, WDIR, WSPD, GST) |&gt;\n   mutate(Site = \"FtMcHenry\")\n\nData &lt;- read.csv(\"data/FtMcHenry.csv\", check.names=FALSE)\nData$datetime &lt;- lubridate::parse_date_time(Data$datetime, orders = c(\"Ymd HMS\", \"Ymd HM\", \"Ymd\"), truncated = 3)\n# write.csv(Data, \"data/FtMcHenry.csv\", row.names=FALSE)\n\nNew &lt;- setdiff(FtMcHenry, Data)\nUpdated &lt;- bind_rows(New, Data) |&gt; arrange(desc(datetime))\nwrite.csv(Updated, \"data/FtMcHenry.csv\", row.names=FALSE)\n\n\nurl &lt;- \"https://forecast.weather.gov/data/obhistory/KDMH.html\"\nTheInitialData &lt;- RainfallHistorical(url=url)\n\nWarning: 20 failed to parse.\n\n#write.csv(TheInitialData, \"data/HistoricalData.csv\", row.names=FALSE)\n\nData &lt;- read.csv(\"data/HistoricalData.csv\", check.names=FALSE)\nData$datetime &lt;- lubridate::ymd_hms(Data$datetime)\nData$Date &lt;- lubridate::ymd(Data$Date)\n\nNew &lt;- setdiff(TheInitialData, Data)\nUpdated &lt;- bind_rows(New, Data) |&gt; arrange(desc(datetime))\nwrite.csv(Updated, \"data/HistoricalData.csv\", row.names=FALSE)"
  }
]